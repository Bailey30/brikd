services:
  db:
    # image: postgres:14.1
    image: postgis/postgis:17-3.5
    environment:
      - POSTGRES_DB=brikd
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5


  backend:
    build:
      context: ./backend
      dockerfile: local.Dockerfile
    command: pipenv run python manage.py runserver 0.0.0.0:8000
    environment:
      - DATABASE_URL=postgis://postgres:postgres@db:5432/brikd
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    restart: always 

  frontend:
    build:
      context: ./frontend
      dockerfile: local.Dockerfile
    ports:
      - 3000:3000
    env_file: 
       - ./.env.development
    command: npm run dev 
    volumes:
      - ./frontend:/app
    working_dir: /app
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    tty: true
    stdin_open: true



# docker-compose exec web python manage.py migrate
